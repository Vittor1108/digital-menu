// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int         @id @default(autoincrement())
  email               String      @unique
  password            String
  cpf_cnpj            String      @unique
  tokenActiveAccount  String      @unique
  tokenForgotPassword String?     @unique
  activeAccount       Boolean     @default(false)
  created_at          DateTime    @default(now())
  updeated_at         DateTime    @default(now()) @updatedAt
  photos              PhotoUser[]

  @@map("users")
}

model PhotoUser {
  id           Int      @id @default(autoincrement())
  user_id      Int
  filename     String
  originalname String
  url          String
  created_at   DateTime @default(now())
  updeated_at  DateTime @default(now()) @updatedAt
  user         User     @relation(fields: [user_id], references: [id])

  @@map("photo_users")
}

model Category {
  id               Int                @id @default(autoincrement())
  user_id          Int
  name             String
  description      String
  created_at       DateTime           @default(now())
  updeated_at      DateTime           @default(now()) @updatedAt
  Category_Product Product_Category[]
  PhotoCategory    PhotoCategory[]

  @@map("categories")
}

model PhotoCategory {
  id           Int      @id @default(autoincrement())
  category_id  Int
  filename     String
  originalname String
  url          String
  category     Category @relation(fields: [category_id], references: [id])
  created_at   DateTime @default(now())
  updeated_at  DateTime @default(now()) @updatedAt

  @@map("photo_categories")
}

model Product {
  id               Int                 @id @default(autoincrement())
  name             String
  description      String
  price            Float
  user_id          Int
  Product_Category Product_Category[]
  ProductPhoto     ProductPhoto[]
  created_at       DateTime            @default(now())
  updeated_at      DateTime            @default(now()) @updatedAt

  @@map("products")
}

model Product_Category {
  product     Product  @relation(fields: [product_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
  product_id  Int
  category_id Int
  category    Category @relation(fields: [category_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
  created_at  DateTime @default(now())
  updeated_at DateTime @default(now()) @updatedAt

  @@id([category_id, product_id])
  @@map("products_categories")
}

model ProductPhoto {
  id           Int      @id @default(autoincrement())
  product_id   Int
  product      Product  @relation(fields: [product_id], references: [id])
  filename     String
  originalname String
  url          String
  created_at   DateTime @default(now())
  updeated_at  DateTime @default(now()) @updatedAt

  @@map("photo_products")
}
